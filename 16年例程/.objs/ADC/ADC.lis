                        .module ADC.c
                        .area text(rom, con, rel)
 0000                   .dbfile "D:\ICCV8\16年例程 - 副本\ADC\ADC.c"
                        .area data(ram, con, rel)
 0000                   .dbfile "D:\ICCV8\16年例程 - 副本\ADC\ADC.c"
 0000           _NoteData#A_h:
 0000                   .blkb 2
                        .area idata(rom)
 0000 00FC              .byte 0,252
                        .area data(ram, con, rel)
 0002                   .dbfile "D:\ICCV8\16年例程 - 副本\ADC\ADC.c"
 0002                   .blkb 2
                        .area idata(rom)
 0002 E1D4              .byte 225,212
                        .area data(ram, con, rel)
 0004                   .dbfile "D:\ICCV8\16年例程 - 副本\ADC\ADC.c"
 0004                   .blkb 2
                        .area idata(rom)
 0004 BCA8              .byte 188,168
                        .area data(ram, con, rel)
 0006                   .dbfile "D:\ICCV8\16年例程 - 副本\ADC\ADC.c"
 0006                   .blkb 2
                        .area idata(rom)
 0006 968D              .byte 150,141
                        .area data(ram, con, rel)
 0008                   .dbfile "D:\ICCV8\16年例程 - 副本\ADC\ADC.c"
 0008                   .blkb 2
                        .area idata(rom)
 0008 7E70              .byte 126,'p
                        .area data(ram, con, rel)
 000A                   .dbfile "D:\ICCV8\16年例程 - 副本\ADC\ADC.c"
 000A                   .blkb 2
                        .area idata(rom)
 000A 695E              .byte 'i,94
                        .area data(ram, con, rel)
 000C                   .dbfile "D:\ICCV8\16年例程 - 副本\ADC\ADC.c"
 000C                   .blkb 2
                        .area idata(rom)
 000C 534A              .byte 'S,'J
                        .area data(ram, con, rel)
 000E                   .dbfile "D:\ICCV8\16年例程 - 副本\ADC\ADC.c"
 000E                   .blkb 2
                        .area idata(rom)
 000E 463E              .byte 'F,62
                        .area data(ram, con, rel)
 0010                   .dbfile "D:\ICCV8\16年例程 - 副本\ADC\ADC.c"
 0010                   .blkb 2
                        .area idata(rom)
 0010 3734              .byte 55,52
                        .area data(ram, con, rel)
 0012                   .dbfile "D:\ICCV8\16年例程 - 副本\ADC\ADC.c"
 0012                   .blkb 2
                        .area idata(rom)
 0012 2E29              .byte 46,41
                        .area data(ram, con, rel)
 0014                   .dbfile "D:\ICCV8\16年例程 - 副本\ADC\ADC.c"
 0014                   .blkb 1
                        .area idata(rom)
 0014 25                .byte 37
                        .area data(ram, con, rel)
 0015                   .dbfile "D:\ICCV8\16年例程 - 副本\ADC\ADC.c"
 0015                   .dbfile "D:\ICCV8\16年例程 - 副本\Timer\Timer.h"
 0015                   .dbsym s NoteData _NoteData#A_h A[21:21]c
                        .area text(rom, con, rel)
 0000                   .dbfile "D:\ICCV8\16年例程 - 副本\Timer\Timer.h"
 0000                   .dbfile "D:\ICCV8\16年例程 - 副本\ADC\ADC.c"
 0000                   .dbfunc e ADC_Init _ADC_Init#Fvv fV
                        .even
 0000           _ADC_Init#Fvv::
 0000                   .dbline -1
 0000                   .dbline 10
 0000           ; #include "ADC.h"
 0000           ; /************************************************************
 0000           ; Function Name:  ADC_Init
 0000           ; Inputs: none
 0000           ; Outputs: none
 0000           ; Description:    模数转换寄存器初始化
 0000           ; Writer: MaxMarth
 0000           ; *************************************************************/
 0000           ; void ADC_Init(void)
 0000           ; {
 0000                   .dbline 11
 0000           ;     DDRA   &= ~(1<<0) ;        //PA0输入
 0000 D098              cbi 0x1a,0
 0002                   .dbline 12
 0002           ;     ADMUX  &= ~(1<<REFS1);
 0002 3F98              cbi 0x7,7
 0004                   .dbline 13
 0004           ;     ADMUX  |= 1<<REFS0;      //参考电0压选择AVCC
 0004 3E9A              sbi 0x7,6
 0006                   .dbline 14
 0006           ;     ADMUX  &= ~(1<<ADLAR);   //转换结果左对齐
 0006 3D98              cbi 0x7,5
 0008                   .dbline 15
 0008           ;     ADMUX  &= ~( (1<<MUX0) | (1<<MUX1) | (1<<MUX2) | (1<<MUX3) | (1<<MUX4) ); //选择通道ADC0
 0008 87B1              in R24,0x7
 000A 807E              andi R24,224
 000C 87B9              out 0x7,R24
 000E                   .dbline 16
 000E           ;     ADCSRA |= 1<<ADEN;       //ADC使能
 000E 379A              sbi 0x6,7
 0010                   .dbline 17
 0010           ;     ADCSRA |= 1<<ADATE;      //ADC自动触发使能
 0010 359A              sbi 0x6,5
 0012                   .dbline 18
 0012           ;     ADCSRA &= ~(1<<ADPS2);
 0012 3298              cbi 0x6,2
 0014                   .dbline 19
 0014           ;     ADCSRA |= ( (1<<ADPS0) | (1<<ADPS1) );  //八分频
 0014 86B1              in R24,0x6
 0016 8360              ori R24,3
 0018 86B9              out 0x6,R24
 001A                   .dbline 20
 001A           ;     SFIOR  &= ~( (1<<ADTS0) | (1<<ADTS1) | (1<<ADTS2) ); //连续转换模式
 001A 80B7              in R24,0x30
 001C 8F71              andi R24,31
 001E 80BF              out 0x30,R24
 0020                   .dbline 21
 0020           ;     SFIOR  &= ~(1<<4);       //Bit4为保留位
 0020 80B7              in R24,0x30
 0022 8F7E              andi R24,239
 0024 80BF              out 0x30,R24
 0026                   .dbline 22
 0026           ;     ADCSRA |= (1<<ADSC);     //ADC开始转换
 0026 369A              sbi 0x6,6
 0028                   .dbline -2
 0028           L1:
 0028                   .dbline 0 ; func end
 0028 0895              ret
 002A                   .dbend
 002A                   .dbfunc e Display_ADC _Display_ADC#Fvii fV
 002A           ;              m -> R12,R13
 002A           ;              i -> R22,R23
 002A           ;              n -> R20,R21
 002A           ;              c -> y+0
 002A           ;              b -> R10,R11
 002A           ;              a -> R12,R13
                        .even
 002A           _Display_ADC#Fvii::
 002A 0E940000          xcall push_xgsetF03C
 002E 5901              movw R10,R18
 0030 6801              movw R12,R16
 0032 2497              sbiw R28,4
 0034                   .dbline -1
 0034                   .dbline 33
 0034           ; }
 0034           ; 
 0034           ; /************************************************************
 0034           ; Function Name:  Display_ADC
 0034           ; Inputs: int a,int b
 0034           ; Outputs: none
 0034           ; Description:    将ADC的值在数码管上显示出来
 0034           ; Writer: WH,WZY,MaxMarth
 0034           ; *************************************************************/
 0034           ; void Display_ADC(int a , int b)
 0034           ; {
 0034                   .dbline 35
 0034           ;     int m ,n , i ;
 0034           ;     unsigned long c=0 ;
 0034 80E0              ldi R24,0
 0036 8883              std y+0,R24
 0038 8983              std y+1,R24
 003A 8A83              std y+2,R24
 003C 8B83              std y+3,R24
 003E                   .dbline 36
 003E           ;         if (ADCSRA & ( 1<< 4 ))                 ///ADC中断标志，判断ADC转换是否结束，结束则第四位为1。
 003E 349B              sbis 0x6,4
 0040 38C0              rjmp L3
 0042           X0:
 0042                   .dbline 38
 0042           ;         {
 0042           ;             n = b;
 0042                   .dbline 38
 0042 A501              movw R20,R10
 0044                   .dbline 39
 0044           ;             c = ADC ;
 0044 24B0              in R2,0x4
 0046 35B0              in R3,0x5
 0048 4424              clr R4
 004A 5524              clr R5
 004C 2882              std y+0,R2
 004E 3982              std y+1,R3
 0050 4A82              std y+2,R4
 0052 5B82              std y+3,R5
 0054                   .dbline 40
 0054           ;         for (i=a; i<=b; i++)
 0054 B601              movw R22,R12
 0056 2AC0              xjmp L8
 0058           L5:
 0058                   .dbline 41
 0058           ;             {
 0058                   .dbline 42
 0058           ;                 m = c%10 ;
 0058 8AE0              ldi R24,10
 005A 90E0              ldi R25,0
 005C A0E0              ldi R26,0
 005E B0E0              ldi R27,0
 0060 0881              ldd R16,y+0
 0062 1981              ldd R17,y+1
 0064 2A81              ldd R18,y+2
 0066 3B81              ldd R19,y+3
 0068 BA93              st -y,R27
 006A AA93              st -y,R26
 006C 9A93              st -y,R25
 006E 8A93              st -y,R24
 0070 0E940000          xcall mod32u
 0074 C02E              mov R12,R16
 0076 DD24              clr R13
 0078                   .dbline 43
 0078           ;                 Display_74HC595(n, m);
 0078 2C2D              mov R18,R12
 007A 042F              mov R16,R20
 007C 0E940000          xcall _Display_74HC595#Fvhh
 0080                   .dbline 44
 0080           ;                 n--;
 0080 4150              subi R20,1
 0082 5040              sbci R21,0
 0084                   .dbline 45
 0084           ;                 c= c/10;
 0084 8AE0              ldi R24,10
 0086 90E0              ldi R25,0
 0088 A0E0              ldi R26,0
 008A B0E0              ldi R27,0
 008C 0881              ldd R16,y+0
 008E 1981              ldd R17,y+1
 0090 2A81              ldd R18,y+2
 0092 3B81              ldd R19,y+3
 0094 BA93              st -y,R27
 0096 AA93              st -y,R26
 0098 9A93              st -y,R25
 009A 8A93              st -y,R24
 009C 0E940000          xcall div32u
 00A0 0883              std y+0,R16
 00A2 1983              std y+1,R17
 00A4 2A83              std y+2,R18
 00A6 3B83              std y+3,R19
 00A8                   .dbline 46
 00A8           ;             }
 00A8           L6:
 00A8                   .dbline 40
 00A8 6F5F              subi R22,255  ; offset = 1
 00AA 7F4F              sbci R23,255
 00AC           L8:
 00AC                   .dbline 40
 00AC A616              cp R10,R22
 00AE B706              cpc R11,R23
 00B0 9CF6              brge L5
 00B2           X1:
 00B2                   .dbline 47
 00B2           ;         }
 00B2           L3:
 00B2                   .dbline -2
 00B2           L2:
 00B2                   .dbline 0 ; func end
 00B2 2496              adiw R28,4
 00B4 0C940000          xjmp pop_xgsetF03C
 00B8                   .dbsym r m 12 I
 00B8                   .dbsym r i 22 I
 00B8                   .dbsym r n 20 I
 00B8                   .dbsym l c 0 l
 00B8                   .dbsym r b 10 I
 00B8                   .dbsym r a 12 I
 00B8                   .dbend
 00B8           ; 
 00B8           ; }
